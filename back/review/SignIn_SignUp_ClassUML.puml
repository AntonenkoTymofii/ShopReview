@startuml

interface SignIn {
    + SignIn(email: String, pass: String): SignIn
    + enterAccount()
    + formatPass()

}

interface SignUp{
    + SignUp(email: String, login: String, pass: String,
    name: String, surname: String): SignUp
    + enterAccount()
    + formatPass()

}

abstract class UserDB  {
    # email
    # login
    # password
    # name
    # surname
    + CommunicDB(email: String, login: String, pass: String,
    name: String, surname: String): CommunicDB
    + enterAccount()
    + formatPass()
}

package DataBase <<Database>> {

}

SignUp --|> UserDB
SignIn --|> UserDB

SignUp::enterAcc -u-> DataBase
SignIn::enterAcc -u-> DataBase
@enduml